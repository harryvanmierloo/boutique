'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = uploadFile;

var _isBrowser = require('../utils/isBrowser');

var _isBrowser2 = _interopRequireDefault(_isBrowser);

var _browser = require('./adapters/browser');

var _browser2 = _interopRequireDefault(_browser);

var _node = require('./adapters/node');

var _node2 = _interopRequireDefault(_node);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global fetch */
var rawUploadFile = function rawUploadFile(client, source) {
  if (_isBrowser2.default) {
    return (0, _browser2.default)(client, source);
  }

  return (0, _node2.default)(client, source);
};

// const wait = ms => new Promise(r => setTimeout(r, ms));
var wait = function wait() {
  return Promise.resolve();
};

var imageFormats = ['png', 'jpg', 'jpeg', 'gif'];

var retryOperation = function retryOperation(operation, delay, times) {
  return new Promise(function (resolve, reject) {
    return operation().then(resolve).catch(function (reason) {
      if (times - 1 > 0) {
        return wait(delay).then(retryOperation.bind(null, operation, delay, times - 1)).then(resolve).catch(reject);
      }
      return reject(reason);
    });
  });
};

var fetchJson = function fetchJson(url) {
  return fetch(url).then(function (res) {
    if (res.status === 200) {
      return res.json();
    }

    throw res.status;
  });
};

function uploadFile(client, source) {
  return rawUploadFile(client, source).then(function (hash) {
    if (imageFormats.indexOf(hash.format) < 0) {
      return Promise.resolve(Object.assign({ width: null, height: null }, hash));
    }

    return retryOperation(fetchJson.bind(null, 'https://www.datocms-assets.com' + hash.path + '?fm=json'), 500, 5).then(function (_ref) {
      var PixelHeight = _ref.PixelHeight;
      var PixelWidth = _ref.PixelWidth;

      return Object.assign({ height: PixelHeight, width: PixelWidth }, hash);
    });
  }).then(function (attributes) {
    return client.uploads.create(Object.assign({ alt: '', title: '' }, attributes));
  }).then(function (upload) {
    return Promise.resolve(upload.id);
  });
}
module.exports = exports['default'];