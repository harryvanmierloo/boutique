'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = build;

var _File = require('./File');

var _File2 = _interopRequireDefault(_File);

var _Seo = require('./Seo');

var _Seo2 = _interopRequireDefault(_Seo);

var _Links = require('./Links');

var _Links2 = _interopRequireDefault(_Links);

var _DateTime = require('./DateTime');

var _DateTime2 = _interopRequireDefault(_DateTime);

var _DateOnly = require('./DateOnly');

var _DateOnly2 = _interopRequireDefault(_DateOnly);

var _Gallery = require('./Gallery');

var _Gallery2 = _interopRequireDefault(_Gallery);

var _Color = require('./Color');

var _Color2 = _interopRequireDefault(_Color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var fieldTypeParser = {
  date: function date(value) {
    if (!value) {
      return value;
    }
    return new _DateOnly2.default(Date.parse(value));
  },
  date_time: function date_time(value) {
    if (!value) {
      return value;
    }
    return new _DateTime2.default(Date.parse(value));
  },
  link: function link(value, _ref) {
    var itemsRepo = _ref.itemsRepo;

    if (!value) {
      return value;
    }
    return value && itemsRepo.find(value);
  },
  links: function links(value, _ref2) {
    var itemsRepo = _ref2.itemsRepo;

    var items = value ? value.map(function (id) {
      return itemsRepo.find(id);
    }) : [];
    return new (Function.prototype.bind.apply(_Links2.default, [null].concat(_toConsumableArray(items))))();
  },
  rich_text: function rich_text(value, _ref3) {
    var itemsRepo = _ref3.itemsRepo;

    var items = value ? value.map(function (id) {
      return itemsRepo.find(id);
    }) : [];
    return new (Function.prototype.bind.apply(_Links2.default, [null].concat(_toConsumableArray(items))))();
  },
  gallery: function gallery(value, _ref4) {
    var _this = this;

    var imgixHost = _ref4.imgixHost;
    var itemsRepo = _ref4.itemsRepo;

    var images = value ? value.map(function (data) {
      return _this.file(data, { imgixHost: imgixHost, itemsRepo: itemsRepo });
    }) : [];
    return new (Function.prototype.bind.apply(_Gallery2.default, [null].concat(_toConsumableArray(images))))();
  },
  file: function file(value, _ref5) {
    var imgixHost = _ref5.imgixHost;
    var itemsRepo = _ref5.itemsRepo;

    if (!value) {
      return value;
    }
    return new _File2.default(value, { itemsRepo: itemsRepo, imgixHost: imgixHost });
  },
  color: function color(value) {
    if (!value) {
      return value;
    }
    return new _Color2.default(value);
  },
  seo: function seo(value, _ref6) {
    var itemsRepo = _ref6.itemsRepo;

    if (!value) {
      return value;
    }
    return new _Seo2.default(value, { itemsRepo: itemsRepo });
  },
  json: function json(value) {
    if (!value) {
      return value;
    }
    return JSON.parse(value);
  }
};

function build(fieldType, value, itemsRepo) {
  if (fieldTypeParser[fieldType]) {
    var imgixHost = 'https://' + itemsRepo.site.imgixHost;
    return fieldTypeParser[fieldType](value, { itemsRepo: itemsRepo, imgixHost: imgixHost });
  }

  return value;
}
module.exports = exports['default'];